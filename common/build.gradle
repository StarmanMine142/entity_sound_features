architectury {
    common(rootProject.enabled_platforms.split(","))
}

dependencies {
    // We depend on fabric loader here to use the fabric @Environment annotations and get the mixin dependencies
    // Do NOT use other classes from fabric loader
    modImplementation "net.fabricmc:fabric-loader:${rootProject.fabric_loader_version}"

//    modImplementation ("maven.modrinth:entitytexturefeatures:${project.entitytexturefeatures_version}")

    //use ifs instead
    int mc = project.mc_build as int
    if (mc == 5){
        modImplementation files("build/entity_texture_features_fabric_1.20.4-6.0.jar")
    }else if (mc == 6){
        modImplementation files("build/entity_texture_features_fabric_1.20.6-6.1.1.jar")
    } else if (mc == 7){
        modImplementation files("build/entity_texture_features_fabric_1.21-6.1.1.jar")
    }

}

loom {
    accessWidenerPath = file("src/main/resources/entity_sound_features_${project.mc_build}.accesswidener")
}

publishing {
    publications {
        mavenCommon(MavenPublication) {
            artifactId = rootProject.archives_base_name
            from components.java
        }
    }

    // See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
    repositories {
        // Add repositories to publish to here.
    }
}
